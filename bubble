#include <iostream>
#include <ctime>
#include <vector>
using namespace std;

// Function to perform the bubble sort
void bubbleSort(int arr[], int n, int &basicOperations) {
    for (int i = 0; i < n - 1; ++i) {
        for (int j = 0; j < n - i - 1; ++j) {
            basicOperations++; // Counting basic operations
            if (arr[j] > arr[j + 1]) {
                swap(arr[j], arr[j + 1]);
            }
        }
    }
}

int main() {
    const int numExperiments = 5;
    vector<pair<int, int>> dataPoints;

    for (int experiment = 1; experiment <= numExperiments; ++experiment) {
        int N;
        cout << "Experiment " << experiment << endl;
        cout << "Enter the number of elements in the array: ";
        cin >> N;

        int* arr = new int[N];

        cout << "Enter " << N << " integer elements: ";
        for (int i = 0; i < N; ++i) {
            cin >> arr[i];
        }

        int basicOperations = 0;
        clock_t startTime = clock();

        // Call the bubble sort function
        bubbleSort(arr, N, basicOperations);

        clock_t endTime = clock();
        double timeTaken = double(endTime - startTime) / CLOCKS_PER_SEC;

        cout << "Sorted array: ";
        for (int i = 0; i < N; ++i) {
            cout << arr[i] << " ";
        }
        cout << endl;

        cout << "Time taken for sorting: " << timeTaken << " seconds." << endl;
        cout << "Number of basic operations executed: " << basicOperations << endl;

        dataPoints.push_back(make_pair(N, basicOperations));

        delete[] arr;
    }

    return 0;
}
